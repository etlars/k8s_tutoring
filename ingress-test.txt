[root@k11 nginx-ingress-controller]# cat hello-user-rs.yaml
apiVersion: apps/v1beta2
kind: ReplicaSet
metadata:
  name: hello-user-rs
  namespace: ingress-nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello-user
  template:
    metadata:
      labels:
        app: hello-user
    spec:
      containers:
      - image: etlars/node_user:v2
        name: hello-user
        ports:
        - containerPort: 8080
[root@k11 nginx-ingress-controller]# cat hello-user-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: hello-user-svc
  namespace: ingress-nginx
spec:
  selector:
    app: hello-user
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  #type: LoadBalancer
  type: NodePort

[root@k11 nginx-ingress-controller]# vi hello-ingress.yaml

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: hello-ingress
  namespace: ingress-nginx
  
spec:
  rules:
  - host: k11
    http:
      paths:
      - path: /users/*
        backend:
          serviceName: hello-user-svc
          servicePort: 80
      - path: /products/*
        backend:
          serviceName: hello-product-svc
          servicePort: 80

[root@k11 nginx-ingress-controller]# k get svc --all-namespaces
NAMESPACE       NAME                   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE
default         hello-product-svc      NodePort    10.96.176.124    <none>        80:31257/TCP                 2d
default         hello-user-svc         NodePort    10.101.140.216   <none>        80:31922/TCP                 2d
default         kubernetes             ClusterIP   10.96.0.1        <none>        443/TCP                      6d
ingress-nginx   default-http-backend   ClusterIP   10.107.131.155   <none>        80/TCP                       1d
ingress-nginx   ingress-nginx          NodePort    10.98.18.5       <none>        80:31182/TCP,443:31333/TCP   2h
kube-system     kube-dns               ClusterIP   10.96.0.10       <none>        53/UDP,53/TCP                6d
[root@k11 nginx-ingress-controller]# curl k11:31182/products
Hello World! I'm Production server hello-product-rs-5457c, 10.244.0.6
[root@k11 nginx-ingress-controller]# curl k11:31182/products
Hello World! I'm Production server hello-product-rs-q6fbh, 10.244.0.5
[root@k11 nginx-ingress-controller]# curl k11:31182/users
Hello World! I'm User server hello-user-rs-lwgm9, 10.244.0.4
[root@k11 nginx-ingress-controller]# curl k11:31182/users
Hello World! I'm User server hello-user-rs-hzm7w, 10.244.0.3
[root@k11 nginx-ingress-controller]# curl k11:31182/products
Hello World! I'm Production server hello-product-rs-5457c, 10.244.0.6


[root@k11 nginx-ingress-controller]# openssl genrsa -out tls.key 2048
Generating RSA private key, 2048 bit long modulus
......................................+++
.............................................................................................................+++
e is 65537 (0x10001)
[root@k11 nginx-ingress-controller]# openssl req -new -x509 -key tls.key -out tls.crt -days 3650 -subj /CN=k11
[root@k11 nginx-ingress-controller]# k create secret tls tls-secret --cert=tls.crt --key=tls.key -n ingress-nginx
secret/tls-secret created

[root@k11 nginx-ingress-controller]# vi hello-ingress.yaml

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: hello-ingress
  namespace: ingress-nginx
  annotations:
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"

spec:
  tls:
  - hosts:
    - "k11"
    secretName: tls-secret
  rules:
  - host: k11
    http:
      paths:
      - path: /users/*
        backend:
          serviceName: hello-user-svc
          servicePort: 80
      - path: /products/*
        backend:
          serviceName: hello-product-svc
          servicePort: 80

[root@k11 nginx-ingress-controller]# k describe ing hello-ingress -n ingress-nginx
Name:             hello-ingress
Namespace:        ingress-nginx
Address:
Default backend:  default-http-backend:80 (<none>)
TLS:
  tls-secret terminates k11
Rules:
  Host  Path  Backends
  ----  ----  --------
  k11
        /users/*      hello-user-svc:80 (<none>)
        /products/*   hello-product-svc:80 (<none>)
Annotations:
  nginx.ingress.kubernetes.io/session-cookie-name:   route
  kubectl.kubernetes.io/last-applied-configuration:  {"apiVersion":"extensions/v1beta1","kind":"Ingress","metadata":{"annotations":{"nginx.ingress.kubernetes.io/affinity":"cookie","nginx.ing
ress.kubernetes.io/session-cookie-hash":"sha1","nginx.ingress.kubernetes.io/session-cookie-name":"route"},"name":"hello-ingress","namespace":"ingress-nginx"},"spec":{"rules":[{"host":"k11","
http":{"paths":[{"backend":{"serviceName":"hello-user-svc","servicePort":80},"path":"/users/*"},{"backend":{"serviceName":"hello-product-svc","servicePort":80},"path":"/products/*"}]}}],"tls
":[{"hosts":["k11"],"secretName":"tls-secret"}]}}

  nginx.ingress.kubernetes.io/affinity:             cookie
  nginx.ingress.kubernetes.io/session-cookie-hash:  sha1
Events:
  Type    Reason  Age               From                      Message
  ----    ------  ----              ----                      -------
  Normal  CREATE  17m               nginx-ingress-controller  Ingress ingress-nginx/hello-ingress
  Normal  UPDATE  21s (x2 over 4m)  nginx-ingress-controller  Ingress ingress-nginx/hello-ingress
[root@k11 nginx-ingress-controller]# k get svc -n ingress-nginx
NAME                   TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE
default-http-backend   ClusterIP   10.107.131.155   <none>        80/TCP                       1d
ingress-nginx          NodePort    10.98.18.5       <none>        80:31182/TCP,443:31333/TCP   2h


[root@k11 nginx-ingress-controller]# curl -v -k https://k11:31333/users
* About to connect() to k11 port 31333 (#0)
*   Trying 192.168.122.225...
* Connected to k11 (192.168.122.225) port 31333 (#0)
* Initializing NSS with certpath: sql:/etc/pki/nssdb
* skipping SSL peer certificate verification
* SSL connection using TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
* Server certificate:
*       subject: CN=k11
*       start date:  8월 02 07:56:38 2018 GMT
*       expire date:  7월 30 07:56:38 2028 GMT
*       common name: k11
*       issuer: CN=k11
> GET /users HTTP/1.1
> User-Agent: curl/7.29.0
> Host: k11:31333
> Accept: */*
>
< HTTP/1.1 200 OK
< Server: nginx/1.13.12
< Date: Thu, 02 Aug 2018 08:01:35 GMT
< Transfer-Encoding: chunked
< Connection: keep-alive
< Strict-Transport-Security: max-age=15724800; includeSubDomains
<
Hello World! I'm User server hello-user-rs-hzm7w, 10.244.0.3
* Connection #0 to host k11 left intact



[root@k11 nginx-ingress-controller]# curl -v -k https://k11:31333/products
* About to connect() to k11 port 31333 (#0)
*   Trying 192.168.122.225...
* Connected to k11 (192.168.122.225) port 31333 (#0)
* Initializing NSS with certpath: sql:/etc/pki/nssdb
* skipping SSL peer certificate verification
* SSL connection using TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
* Server certificate:
*       subject: CN=k11
*       start date:  8월 02 07:56:38 2018 GMT
*       expire date:  7월 30 07:56:38 2028 GMT
*       common name: k11
*       issuer: CN=k11
> GET /products HTTP/1.1
> User-Agent: curl/7.29.0
> Host: k11:31333
> Accept: */*
>
< HTTP/1.1 200 OK
< Server: nginx/1.13.12
< Date: Thu, 02 Aug 2018 08:01:44 GMT
< Transfer-Encoding: chunked
< Connection: keep-alive
< Strict-Transport-Security: max-age=15724800; includeSubDomains
<
Hello World! I'm Production server hello-product-rs-5457c, 10.244.0.6
* Connection #0 to host k11 left intact
